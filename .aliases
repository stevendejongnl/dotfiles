#! /bin/zsh

source $HOME/scripts/mosaic.sh
source $HOME/scripts/git.sh

alias vpn="$HOME/.openvpn3/openvpn.sh"
alias change-wallpaper="$HOME/.config/systemd/user/scripts/wallpaper.sh"
alias used-ports="sudo lsof -i -P -n"
alias used-ports-listen="sudo lsof -i -P -n | grep LISTEN"
alias vim_homeassistant="vim scp://root@192.168.1.77:24//config/"
alias convert="magick convert"
alias disable-middle-mouse="/usr/bin/xinput set-button-map $(/usr/bin/xinput list --id-only 'ETPS/2 Elantech Touchpad') 1 1 3 4 5 6 7"

function _bluetoothreset(){
  if lsmod | grep -q btusb; then
    echo "Removing btusb"
    sudo rmmod btusb
    echo "Sleeping for 15 seconds"
    sleep 15
  fi

  echo "Adding btusb"
  sudo modprobe btusb
}
alias bluetoothreset="_bluetoothreset"
alias btreset="_bluetoothreset"
alias bt-reset="_bluetoothreset"

function _pip(){
  if [ $1 = "search" ]; then
    pip_search "$2";
  else pip "$@";
  fi;
}
alias pip="_pip"

function markdown(){
  if [ $1 = "--open" ] || [ $1 = "-o" ]; then
    nohup flatpak run org.gnome.gitlab.somas.Apostrophe $2 > /dev/null 2>&1
    return
  fi
  if [ $2 = "--open" ] || [ $2 = "-o" ]; then
    nohup flatpak run org.gnome.gitlab.somas.Apostrophe $1 > /dev/null 2>&1 
    return
  fi
  pandoc $1 | lynx -stdin
}
alias md="markdown"

function cloudsuite_cli {
  TRYDENT_DIR="$HOME/workspace/cloudsuite/trydent"
  CSCONFIG="$TRYDENT_DIR/docker-compose.yml"
  CSCONFIG_OVERRIDE="$TRYDENT_DIR/docker-compose.override.yml"
  CSTESTCONFIG="$TRYDENT_DIR/docker-compose.tests.yml"
  CSACONFIG="$HOME/workspace/cloudsuite/cloudsuite-app/docker-compose.yml"

  POSITIONAL_ARGS=()

  function help {
    echo "
    Usage:
    -l|--log [-c|--container]
    -r|--redis [-c|--command]
    -m|--migrate
    -tr|--trydent
    -t|--test
    -a|--app
    -h|--help
    "
  }

  while [[ $# -gt 0 ]]; do
    case $1 in
      -l|--log)
        case $2 in
          -c|--container)
            echo "Start logging for ($3)"
            docker logs -f $(docker compose -f $CSCONFIG -f $CSCONFIG_OVERRIDE ps -q $3)
            return
            ;;
          *)
            docker compose -f $CSCONFIG -f $CSCONFIG_OVERRIDE logs -f
            return
            ;;
        esac
        return
        ;;
      -r|--redis)
        case $2 in
          -c|--command)
            echo "Redis cli ($3)"
            docker compose -f $CSCONFIG -f $CSCONFIG_OVERRIDE exec redis redis-cli $3
            return
            ;;
          *)
            docker compose -f $CSCONFIG -f $CSCONFIG_OVERRIDE exec redis redis-cli
            return
            ;;
        esac
        return
        ;;
      -m|--migrate)
        docker compose -f $CSCONFIG -f $CSCONFIG_OVERRIDE exec trytond /srv/trytond/bin/trytond -d fixture --all -v
        return
        ;;
      -a|--app)
        docker compose -f $CSACONFIG down && xhost +local:docker; docker-compose -f $CSACONFIG up -d
        return
        ;;
      -tr|trydent)
        docker compose -f $CSCONFIG ${@:2}
        return
        ;;
      -t|--test)
        docker compose -f $CSTESTCONFIG ${@:2}
        return
        ;;
      -s|--sphinx)
        # make -C $TRYDENT_DIR/dockers/sphinx build push
        make -C $TRYDENT_DIR/dockers/sphinx build
        docker compose -f $CSCONFIG -f $CSCONFIG_OVERRIDE down
        docker volume rm vanilla-sphinx-data
        docker compose -f $CSCONFIG -f $CSCONFIG_OVERRIDE up -d sphinx
        docker compose -f $CSCONFIG -f $CSCONFIG_OVERRIDE exec sphinx /bin/sh -c './generate_config.py --sphinx_port "$SPHINX_PORT" --basepath /sphinx --logpath /var/log/sphinx --pidpath /sphinx/pid --salescenter > /sphinx/config/sphinx.conf'
        docker compose -f $CSCONFIG -f $CSCONFIG_OVERRIDE exec sphinx indexer --rotate --config /sphinx/config/sphinx.conf --all
        docker compose -f $CSCONFIG -f $CSCONFIG_OVERRIDE up -d webshop sphinx
        return
        ;;
      -h|--help)
        help
        return
        ;;
      -*|--*)
        echo "Unknown option $1"
        return
        ;;

      *)
        help
        POSITIONAL_ARGS+=("$1")
        shift
        ;;
    esac
  done
}

alias cs="cloudsuite_cli"
